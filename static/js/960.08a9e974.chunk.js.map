{"version":3,"file":"static/js/960.08a9e974.chunk.js","mappings":"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","sources":["api/api.tsx","data/events.ts","data/schedule.ts","data/shows.ts","player/themes/core.ts","player/themes.tsx","util/performance.ts"],"sourcesContent":["import { events } from \"../data/events\";\nimport {\n  AUTOMATED_HOST,\n  hosts,\n  KRNL_HOST,\n  NOT_FOUND_HOST,\n} from \"../data/hosts\";\nimport { shows } from \"../data/shows\";\nimport { getTheme, themes } from \"../player/themes/core\";\nimport { measureFPS } from \"../util/performance\";\n\nfunction RefreshAPI() {\n  // TODO: right now, it's read only\n  // what if it wasn't >:D\n  window.api = window.api || {};\n  window.api.fps = measureFPS;\n  window.api.refresh = RefreshAPI;\n  window.api.data = window.api.data || {};\n  window.api.data.events = events;\n  window.api.data.hosts = hosts;\n  window.api.data.special_hosts = {\n    KRNL: KRNL_HOST,\n    NOT_FOUND: NOT_FOUND_HOST,\n    AUTOMATED: AUTOMATED_HOST,\n  };\n  window.api.data.shows = shows;\n  window.api.data.themes = themes;\n  window.api.player = window.api.player || {};\n  window.player._refresh_metadata().then(() => {\n    window.api.player.formats = {\n      desktop: window.player.desktop_format!,\n      mobile: window.player.mobile_format!,\n    };\n    window.api.player.data = window.player.player_data!;\n  });\n  window.api.requests = window.api.requests || {};\n  window.api.requests.options = {\n    max_per_day: window.player.requests_core.max_requests_per_day,\n    max_per_period: window.player.requests_core.max_requests_per_period,\n    period_length: window.player.requests_core.period_length,\n  };\n  window.api.requests.get_tracks = window.player.requests_core.get_tracks();\n  window.api.requests.request_song = window.player.requests_core.request;\n  window.api.requests.stats = {\n    total: window.player.requests_core.total_requests,\n    today: window.player.requests_core.requests_today,\n    period: window.player.requests_core.requests_this_period,\n    last_request: window.player.requests_core.last_request,\n    next_request: window.player.requests_core.probable_next_request,\n  };\n  window.api.requests.status = window.player.requests_core.status;\n\n  window.api.options = window.api.options || {};\n  window.api.options.player = window.player.player_options;\n  window.api.options.setPlayerOptions = (options: any) => {\n    // merge the options\n    let new_options = {\n      ...window.player.player_options,\n      ...options,\n    };\n    // save the options\n    localStorage.setItem(\"player_options\", JSON.stringify(new_options));\n    window.player.player_options = new_options;\n    window.api.options.player = new_options;\n  };\n  window.api.options.theme = getTheme(localStorage.getItem(\"theme\") || \"\");\n  window.api.options.setTheme = (theme: string) => {\n    localStorage.setItem(\"theme\", theme);\n    window.dispatchEvent(new StorageEvent(\"storage\", { key: \"theme\" }));\n    window.api.options.theme = getTheme(theme);\n  };\n}\n\nfunction APIPage() {\n  // right let's setup the api!\n  RefreshAPI();\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-white text-black\">\n      This page is intentionally left blank.\n    </div>\n  );\n}\n\nexport default APIPage;\n","import { BannerEffect, EffectEffect, ScheduleEffect } from \"./effects\";\nimport { ScheduleItem } from \"./schedule\";\n\ntype Event = {\n  name: string;\n  effects: {\n    banner?: BannerEffect;\n    effect?: EffectEffect;\n    schedule?: ScheduleEffect;\n  };\n  schedule: ScheduleItem;\n};\n\nexport const events: Event[] = [\n  {\n    name: \"Winter Break\",\n    effects: {\n      schedule: {\n        is_hard_suppression: false,\n        message: \"We're on break for the holidays! We'll be back soon!\",\n      },\n    },\n    schedule: new ScheduleItem(\n      new Date(2022, 11, 22, 9, 0),\n      new Date(2023, 0, 15, 9, 0)\n    ),\n  },\n  {\n    name: \"Spring Break\",\n    effects: {\n      schedule: {\n        is_hard_suppression: false,\n        message: \"We're on break for the holidays! We'll be back soon!\",\n      },\n    },\n    schedule: new ScheduleItem(\n      new Date(2022, 2, 9, 9, 0),\n      new Date(2023, 2, 19, 9, 0)\n    ),\n  },\n  {\n    name: \"Summer Break\",\n    effects: {\n      schedule: {\n        is_hard_suppression: false,\n        message: \"We're on break for the holidays! We'll be back soon!\",\n      },\n    },\n    schedule: new ScheduleItem(\n      new Date(2022, 4, 15, 9, 0),\n      new Date(2023, 7, 27, 9, 0)\n    ),\n  },\n];\n\nexport function getCurrentEvents() {\n  return events.filter((event) => event.schedule.isCurrent());\n}\n\nexport function getAllEvents() {\n  return events;\n}\n\nexport function isScheduleSuppressed() {\n  // is it suppressed (either hard or soft?)\n  return getCurrentEvents().some(\n    (event) => event.effects.schedule !== undefined\n  );\n}\n\nexport function scheduleSuppressedBy() {\n  return getCurrentEvents().filter(\n    (event) => event.effects.schedule !== undefined\n  );\n}\n\nexport function isScheduleHardSuppressed() {\n  // is it suppressed hard?\n  return getCurrentEvents().some(\n    (event) =>\n      event.effects.schedule !== undefined &&\n      event.effects.schedule.is_hard_suppression === true\n  );\n}\n\nexport function hasSiteBanner() {\n  return getCurrentEvents().some(\n    (event) =>\n      event.effects.banner !== undefined &&\n      event.effects.banner.site_banner_text !== undefined\n  );\n}\n\nexport function getSiteBanner() {\n  return getCurrentEvents().find(\n    (event) =>\n      event.effects.banner !== undefined &&\n      event.effects.banner.site_banner_text !== undefined\n  );\n}\n\nexport function hasHomeBanner() {\n  return getCurrentEvents().some(\n    (event) =>\n      event.effects.banner !== undefined &&\n      event.effects.banner.home_banner_text !== undefined\n  );\n}\n\nexport function getHomeBanner() {\n  return getCurrentEvents().find(\n    (event) =>\n      event.effects.banner !== undefined &&\n      event.effects.banner.home_banner_text !== undefined\n  );\n}\n\nexport function getEffect() {\n  return (\n    getCurrentEvents().find((event) => event.effects.effect !== undefined) ||\n    \"seasonal\"\n  );\n}\n","import parser, { ParserOptions } from \"cron-parser\";\n\nlet PARSER_OPTIONS: ParserOptions = {\n  tz: \"America/Chicago\",\n};\n\nexport class ScheduleItem {\n  // end is either a Date, a cron, or a duration in minutes\n  constructor(\n    public start: Date | string,\n    public end: Date | number,\n    // optional invalid after date\n    public invalidAfter?: Date\n  ) {\n    this.start = start;\n    this.end = end;\n    this.invalidAfter = invalidAfter;\n  }\n\n  // create a function to check if the current time is within the start and end dates\n  // if the start date is a cron, use cron-parser to get the next date\n  // if the end date is a cron, use cron-parser to get the next date\n  // if the end date is a duration, add the duration to the start date\n  // if the current time is between the start and end dates, return true\n  // otherwise, return false\n  isCurrent() {\n    let now = new Date();\n    if (this.invalidAfter && now > this.invalidAfter) {\n      return false;\n    }\n    let start = this.start;\n    let end = this.end;\n    if (typeof start === \"string\") {\n      let startExp = parser.parseExpression(start, PARSER_OPTIONS);\n      let prevDate = startExp.prev().toDate();\n      let nextDate = startExp.next().toDate();\n      if (typeof end === \"number\") {\n        // we gotta work\n        let endA = new Date(prevDate.getTime() + end * 60000);\n        let endB = new Date(nextDate.getTime() + end * 60000);\n        // which one is closer?\n        if (\n          Math.abs(endA.getTime() - now.getTime()) <\n          Math.abs(endB.getTime() - now.getTime())\n        ) {\n          end = endA;\n          start = prevDate;\n        } else {\n          end = endB;\n          start = nextDate;\n        }\n      }\n    } else if (start instanceof Date) {\n      if (typeof end === \"number\") {\n        end = new Date(start.getTime() + end * 60000);\n      }\n    }\n\n    return now >= start && now <= end;\n  }\n\n  getNextOccurance() {\n    let now = new Date();\n    if (this.invalidAfter && now > this.invalidAfter) {\n      return undefined;\n    }\n    let start = this.start;\n    if (typeof start === \"string\") {\n      let startExp = parser.parseExpression(start, PARSER_OPTIONS);\n      return startExp.next().toDate();\n    }\n    if (now < start) {\n      return start;\n    }\n    return undefined;\n  }\n\n  endToDate() {\n    let now = new Date();\n    let end = this.end;\n    if (typeof end === \"number\") {\n      let start = this.start;\n      if (typeof start === \"string\") {\n        let startExp = parser.parseExpression(start, PARSER_OPTIONS);\n        let prevDate = startExp.prev().toDate();\n        let nextDate = startExp.next().toDate();\n        // which one is closer?\n        if (\n          Math.abs(prevDate.getTime() - now.getTime()) <\n          Math.abs(nextDate.getTime() - now.getTime())\n        ) {\n          end = new Date(prevDate.getTime() + end * 60000);\n        } else {\n          end = new Date(nextDate.getTime() + end * 60000);\n        }\n      } else {\n        end = new Date(start.getTime() + end * 60000);\n      }\n    }\n    return end;\n  }\n\n  static getParser() {\n    return parser;\n  }\n\n  static getParserOptions() {\n    return PARSER_OPTIONS;\n  }\n\n  static getParserFields() {\n    return JSON.parse(\n      JSON.stringify(\n        parser.parseExpression(\"0 0 0 * * *\", PARSER_OPTIONS).fields\n      )\n    );\n  }\n}\n","import { slugify } from \"../util/slug\";\nimport { getHostByName, Host, KRNL_HOST } from \"./hosts\";\nimport { ScheduleItem } from \"./schedule\";\nexport type ShowLogo = {\n  transparent: string;\n  opaque: string;\n};\n\nexport type Show = {\n  name: string;\n  splash_text: string;\n  description: string;\n  hosts: Host[];\n  logo?: ShowLogo;\n  background?: string;\n  guests?: string; // any guests on the show. they don't get their own page, but they get a mention on the show page.\n  scheduleString: string;\n  schedule: ScheduleItem;\n  hidden?: boolean;\n  hiddenAfter?: Date;\n};\n\nexport const shows: Show[] = [\n  {\n    name: \"The Graveyard Shift\",\n    splash_text: \"\",\n    description:\n      \"Alt is such a broad genre. What does any of it even mean? All I know is you love listening to me every week.\",\n    background: \"#fc73e3\",\n    hosts: [getHostByName(\"Adrien\")],\n    scheduleString: \"Every Tuesday from 10pm to 11pm\",\n    schedule: new ScheduleItem(\"0 22 * * 2\", 60),\n  },\n  {\n    name: \"Stochastic Shuffle\",\n    splash_text: \"\",\n    description:\n      \"This is a totally unplanned show, where anything can happen (within contractual obligations). There's no logic behind this show, it just is.\",\n    background: \"#0f3cec\",\n    hosts: [getHostByName(\"Mark\")],\n    scheduleString: \"Every Monday from 9 pm to 10 pm\",\n    schedule: new ScheduleItem(\"0 21 * * 1\", 60),\n  },\n  {\n    name: \"The Vibe\",\n    splash_text: \"vibes~\",\n    description:\n      \"Somehow even *more* random than Mark's show, but at least 10x more chill! Ice not required.\\n\\n*when he feels like it\",\n    background: \"#1c2dae\",\n    hosts: [getHostByName(\"Grayson\")],\n    scheduleString: \"Every Sunday from 9pm to 10pm*\",\n    schedule: new ScheduleItem(\"0 21 * * 0\", 60),\n  },\n  {\n    name: \"The After School Special\",\n    splash_text: \"Because no one else streams earlier!\",\n    description:\n      \"I play music, different vibes every week, and do some rambling (usually too much rambling)\",\n    background: \"#6f69dd\",\n    hosts: [getHostByName(\"Sophie\")],\n    scheduleString: \"Every Thursday from 3:30pm to 4:30pm\",\n    schedule: new ScheduleItem(\"30 15 * * 4\", 60),\n  },\n  {\n    name: \"Latino Hour\",\n    splash_text: \":D\",\n    description: \"Just vibe and listen to music from across Latin America.\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Zoe\")],\n    scheduleString: \"Every Friday from 4pm to 5pm\",\n    schedule: new ScheduleItem(\"0 16 * * 5\", 60),\n  },\n  {\n    name: \"Timezones\",\n    splash_text: \"International Music and Good Vibes\",\n    description:\n      \"Come and listen to music from all over the world! There's no jet lag here, only Timezones.\",\n    background: \"#232323\",\n    hosts: [getHostByName(\"Trey\"), getHostByName(\"Zoe\")],\n    scheduleString: \"Every Wednesday from 3:30pm to 4:30pm\",\n    schedule: new ScheduleItem(\"30 15 * * 3\", 60),\n  },\n  {\n    name: \"The Bard's Tale\",\n    splash_text: \"The only show that matters\",\n    description: \"\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Caden\")],\n    scheduleString: \"Every Sunday from 1pm to 3pm\",\n    schedule: new ScheduleItem(\"0 13 * * 0\", 120),\n  },\n  {\n    name: \"KRNL Tabling!\",\n    splash_text: \"Come say hi!\",\n    description:\n      \"We'll be on the third floor of Thomas Commons during lunch! Come say hi! Mark (and someone else we just don't quite know who) will also be live throughout the entirety of lunch!\",\n    background: \"#ddfe60\",\n    hosts: [KRNL_HOST],\n    scheduleString: \"Tuesday and Wednesday from 11am to 1pm in Thomas Commons\",\n    schedule: new ScheduleItem(\"0 11 24,25 1 *\", 120, new Date(2023, 2, 2)),\n    hiddenAfter: new Date(2023, 2, 1),\n  },\n  {\n    name: \"CCPR\",\n    splash_text: \"\",\n    description: \"Because we can do anything in 18 ~~days~~ minutes!\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Adrien\"), getHostByName(\"Sophie\")],\n    scheduleString: \"Every Monday from 8am to 8:18am\",\n    schedule: new ScheduleItem(\"0 8 * * 1\", 18),\n  },\n  {\n    name: \"The Box\",\n    splash_text: \"\",\n    description: \"Vibe with music and the occasional conversation\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Brock\")],\n    guests: \"Garnett Strack\",\n    scheduleString: \"Every Friday from 8pm to 9pm\",\n    schedule: new ScheduleItem(\"0 20 * * 5\", 60),\n  },\n];\n\nexport function getShowByName(name: string): Show | undefined {\n  return shows.find((show) => show.name === name);\n}\n\nexport function getShowsByHost(host: Host): Show[] {\n  return shows.filter(\n    (show) => show.hosts.includes(host) || show.hosts.includes(KRNL_HOST)\n  );\n}\n\nexport function getAllShows(): Show[] {\n  return shows.filter((show) => {\n    if (show.hidden === true) {\n      return false;\n    }\n    if (show.hiddenAfter !== undefined) {\n      if (show.hiddenAfter.getTime() < Date.now()) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nexport function findShowByName(name: string, slug?: boolean): Show | undefined {\n  if (slug === true) {\n    return shows.find((show) => slugify(show.name) === slugify(name));\n  }\n  return shows.find((show) => show.name === name);\n}\n\nexport function getNearestShows(): Show[] {\n  // const now = new Date();\n  const nearest = getAllShows()\n    .filter((show) => show.schedule.getNextOccurance() !== undefined)\n    .sort((a, b) => {\n      const aDate = a.schedule.getNextOccurance();\n      const bDate = b.schedule.getNextOccurance();\n      if (aDate === undefined || bDate === undefined) {\n        return 0;\n      }\n      return aDate.getTime() - bDate.getTime();\n    });\n  return nearest;\n}\n\nexport function getCurrentShows(): Show[] {\n  return getAllShows().filter((show) => show.schedule.isCurrent());\n}\n","import {\n  FIRE_THEME,\n  FOUNTAIN_THEME,\n  SEA_ANEMONE_THEME,\n  SNOW_THEME,\n} from \"../themes\";\n\nexport type ThemeType =\n  | \"particles\"\n  | \"background\"\n  | \"audio\"\n  | \"dynamic\"\n  | \"tailwind\";\n\nexport type Theme = {\n  name: string;\n  description?: string;\n  type: ThemeType;\n  // if the theme is a background, the options are the css background properties\n  // if the theme is tailwind, the options are the tailwind classes\n  // if the theme is a particles, the options is the particles.js config\n  // if the theme is audio, it requires a CANVAS and to be connected to player.audio_node (or whatever i named it)\n  // if the theme is dynamic, the function (first elem of list) is called to return the theme\n  // that result should be a string that corresponds to a theme name\n  // the second elem is how long to wait before calling the function again (in ms)\n\n  // this can return a promise, so you can do async stuff! (useful for dynamic/audio/particles themes)\n  options: any[];\n  hidden?: boolean;\n};\n\nexport const themes: Theme[] = [\n  {\n    name: \"Default\",\n    type: \"tailwind\",\n    options: [\n      \"bg-gradient-to-r\",\n      \"from-green-300\",\n      \"via-blue-500\",\n      \"to-purple-600\",\n    ],\n  },\n  {\n    name: \"OLED Lover\",\n    type: \"background\",\n    options: [\n      {\n        background: \"#000\",\n      },\n    ],\n  },\n  {\n    name: \"Fire\",\n    type: \"particles\",\n    options: [FIRE_THEME],\n  },\n  {\n    name: \"Fountain\",\n    type: \"particles\",\n    options: [FOUNTAIN_THEME],\n  },\n  {\n    name: \"Sea Anemone\",\n    type: \"particles\",\n    options: [SEA_ANEMONE_THEME],\n  },\n  {\n    name: \"Seasonal\",\n    type: \"dynamic\",\n    options: [\n      () => {\n        let month = new Date().getMonth() + 1;\n        switch (month) {\n          case 1:\n          case 2:\n            return \"Seasonal - Winter\";\n          case 3:\n          case 4:\n          case 5:\n            return \"Seasonal - Spring\";\n          case 6:\n          case 7:\n          case 8:\n            return \"Seasonal - Summer\";\n          case 9:\n          case 10:\n          case 11:\n            return \"Seasonal - Autumn\";\n          case 12:\n            return \"Seasonal - Winter\";\n          default:\n            return \"Default\";\n        }\n      },\n      1000 * 60 * 60 * 24, // 1 day\n    ],\n  },\n  {\n    name: \"Seasonal - Winter\",\n    type: \"particles\",\n    options: [SNOW_THEME],\n  },\n  // {\n  //   name: \"Weather\",\n  //   type: \"dynamic\",\n  //   options: [\n  //     async () => {\n  //       // TODO: THIS\n  //     },\n  //     1000 * 60 * 60, // 1 hour\n  //   ]\n  // }\n];\n\nexport const BLANK_THEME: Theme = {\n  name: \"\",\n  type: \"background\",\n  options: [\n    {\n      background: \"black\",\n    },\n  ],\n};\n\nexport function getTheme(name: string) {\n  let found = themes.find((theme) => theme.name === name);\n  if (!found) {\n    console.warn(`Theme \"${name}\" not found!`);\n    found = themes[0];\n  }\n  return found;\n}\n\nexport function getAllThemes() {\n  return themes;\n}\n\nexport function getDefaultTheme() {\n  return getTheme(\"Seasonal\");\n}\n","// import { ClickMode, SizeMode } from \"tsparticles-engine\";\nimport type { ISourceOptions } from \"tsparticles-engine\";\nimport { curvesPathName } from \"tsparticles-path-curves\";\n\nexport const SEA_ANEMONE_THEME: ISourceOptions = {\n  fpsLimit: 120,\n  fullScreen: {\n    enable: true,\n    zIndex: -1,\n  },\n  particles: {\n    color: {\n      value: \"#FF0000\",\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outModes: {\n        default: \"destroy\",\n      },\n      path: {\n        clamp: false,\n        enable: true,\n        delay: {\n          value: 0,\n        },\n        generator: curvesPathName,\n      },\n      random: false,\n      speed: 2,\n      straight: false,\n      trail: {\n        fillColor: \"#000\",\n        length: 30,\n        enable: true,\n      },\n    },\n    number: {\n      value: 0,\n      limit: 300,\n    },\n    opacity: {\n      value: 1,\n    },\n    shape: {\n      type: \"circle\",\n    },\n    size: {\n      value: { min: 1, max: 10 },\n      animation: {\n        count: 1,\n        startValue: \"min\",\n        enable: true,\n        speed: 10,\n        sync: true,\n      },\n    },\n  },\n  background: {\n    color: \"#000\",\n  },\n  detectRetina: true,\n  emitters: {\n    direction: \"none\",\n    rate: {\n      quantity: 10,\n      delay: 0.3,\n    },\n    size: {\n      width: 0,\n      height: 0,\n      mode: \"precise\",\n    },\n    spawnColor: {\n      value: \"#ff0000\",\n      animation: {\n        h: {\n          enable: true,\n          offset: {\n            min: -1.4,\n            max: 1.4,\n          },\n          speed: 5,\n          sync: false,\n        },\n        l: {\n          enable: true,\n          offset: {\n            min: 20,\n            max: 80,\n          },\n          speed: 0,\n          sync: false,\n        },\n      },\n    },\n    position: {\n      x: 50,\n      y: 50,\n    },\n  },\n};\n\nexport const FOUNTAIN_THEME: ISourceOptions = {\n  fpsLimit: 120,\n  fullScreen: false,\n  particles: {\n    bounce: {\n      vertical: {\n        value: {\n          min: 0.75,\n          max: 0.85,\n        },\n      },\n    },\n    color: {\n      value: [\n        \"#3998D0\",\n        \"#2EB6AF\",\n        \"#A9BD33\",\n        \"#FEC73B\",\n        \"#F89930\",\n        \"#F45623\",\n        \"#D62E32\",\n        \"#EB586E\",\n        \"#9952CF\",\n      ],\n    },\n    number: {\n      value: 0,\n    },\n    destroy: {\n      mode: \"split\",\n      split: {\n        count: 2,\n        factor: {\n          value: {\n            min: 1.1,\n            max: 2,\n          },\n        },\n        rate: {\n          value: {\n            min: 2,\n            max: 3,\n          },\n        },\n      },\n    },\n    opacity: {\n      value: 0.5,\n    },\n    size: {\n      value: {\n        min: 10,\n        max: 20,\n      },\n    },\n    move: {\n      enable: true,\n      gravity: {\n        enable: true,\n        maxSpeed: 50,\n      },\n      speed: {\n        min: 10,\n        max: 20,\n      },\n      direction: \"none\",\n      random: false,\n      straight: false,\n      outModes: {\n        bottom: \"split\",\n        default: \"bounce\",\n        top: \"none\",\n      },\n      trail: {\n        enable: true,\n        fillColor: \"#000\",\n        length: 3,\n      },\n    },\n  },\n  detectRetina: true,\n  background: {\n    color: \"#fff\",\n  },\n  emitters: {\n    direction: \"top\",\n    life: {\n      count: 0,\n      duration: 0.15,\n      delay: 3,\n    },\n    rate: {\n      delay: 0.1,\n      quantity: 5,\n    },\n    size: {\n      width: 0,\n      height: 0,\n    },\n  },\n};\n\n// export const HEXAGON_THEME: ISourceOptions = hex\n\nexport const FIRE_THEME: ISourceOptions = {\n  fpsLimit: 120,\n  fullScreen: {\n    enable: true,\n    zIndex: -1,\n  },\n  particles: {\n    number: {\n      value: 80 * 3,\n      density: {\n        enable: true,\n        area: 800,\n      },\n    },\n    color: {\n      value: [\"#fdcf58\", \"#757676\", \"#f27d0c\", \"#800909\", \"#f07f13\"],\n    },\n    opacity: {\n      value: { min: 0.1, max: 0.5 },\n    },\n    size: {\n      value: { min: 1, max: 3 },\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      random: false,\n    },\n  },\n  interactivity: {\n    detectsOn: \"window\",\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\",\n      },\n      resize: true,\n    },\n  },\n  background: {\n    image: \"radial-gradient(#4a0000, #000)\",\n  },\n};\n\nexport const SNOW_THEME: ISourceOptions = {\n  fpsLimit: 120,\n  fullScreen: {\n    enable: true,\n    zIndex: -1,\n  },\n  background: {\n    color: \"#0d47a1\",\n  },\n  detectRetina: true,\n  interactivity: {\n    detectsOn: \"window\",\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"repulse\",\n      },\n      onHover: {\n        enable: true,\n        mode: \"bubble\",\n      },\n      resize: {\n        enable: true,\n        delay: 0,\n      },\n    },\n  },\n  particles: {\n    move: {\n      direction: \"bottom\",\n      enable: true,\n      random: false,\n      straight: false,\n    },\n    opacity: {\n      value: { min: 0.1, max: 0.5 },\n    },\n    size: {\n      value: { min: 1, max: 10 },\n    },\n    wobble: {\n      distance: 20,\n      enable: true,\n      speed: {\n        min: -5,\n        max: 5,\n      },\n    },\n  },\n};\n","export function measureFPS(ms: number = 10_000) {\n  // returns the average frames per second over the last x ms\n  let lastTime = performance.now();\n  let frames = 0;\n  let fps = 0;\n  return new Promise((resolve) => {\n    let raf = () => {\n      let now = performance.now();\n      frames++;\n\n      // are we over the time limit?\n      if (now - lastTime > ms) {\n        fps = (frames / (now - lastTime)) * 1000;\n        resolve(fps);\n      } else {\n        requestAnimationFrame(raf);\n      }\n    };\n    raf();\n  });\n}\n"],"names":["RefreshAPI","window","api","fps","measureFPS","refresh","data","events","hosts","special_hosts","KRNL","KRNL_HOST","NOT_FOUND","NOT_FOUND_HOST","AUTOMATED","AUTOMATED_HOST","shows","themes","player","_refresh_metadata","then","formats","desktop","desktop_format","mobile","mobile_format","player_data","requests","options","max_per_day","requests_core","max_requests_per_day","max_per_period","max_requests_per_period","period_length","get_tracks","request_song","request","stats","total","total_requests","today","requests_today","period","requests_this_period","last_request","next_request","probable_next_request","status","player_options","setPlayerOptions","new_options","localStorage","setItem","JSON","stringify","theme","getTheme","getItem","setTheme","dispatchEvent","StorageEvent","key","className","name","effects","schedule","is_hard_suppression","message","ScheduleItem","Date","getCurrentEvents","filter","event","isCurrent","isScheduleSuppressed","some","undefined","scheduleSuppressedBy","PARSER_OPTIONS","tz","start","end","invalidAfter","this","now","startExp","parser","prevDate","prev","toDate","nextDate","next","endA","getTime","endB","Math","abs","parse","fields","splash_text","description","background","getHostByName","scheduleString","hiddenAfter","guests","getShowsByHost","host","show","includes","getAllShows","hidden","findShowByName","slug","find","slugify","getNearestShows","getNextOccurance","sort","a","b","aDate","bDate","getCurrentShows","type","fpsLimit","fullScreen","enable","zIndex","particles","number","value","density","area","color","opacity","min","max","size","move","speed","random","interactivity","detectsOn","onClick","mode","resize","image","bounce","vertical","destroy","split","count","factor","rate","gravity","maxSpeed","direction","straight","outModes","bottom","default","top","trail","fillColor","length","detectRetina","emitters","life","duration","delay","quantity","width","height","path","clamp","generator","curvesPathName","limit","shape","animation","startValue","sync","spawnColor","h","offset","l","position","x","y","getMonth","onHover","wobble","distance","BLANK_THEME","found","console","warn","getAllThemes","getDefaultTheme","ms","lastTime","performance","frames","Promise","resolve","raf","requestAnimationFrame"],"sourceRoot":""}