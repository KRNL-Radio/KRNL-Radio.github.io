{"version":3,"file":"static/js/784.34d8ecd1.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","u","b","Symbol","for","d","e","f","g","h","k","l","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","require","StyleToObject","iterator","output","hasIterator","len","protocols","uriTransformer","uri","url","first","colon","indexOf","index","protocol","toLowerCase","stringifyPosition","point","VFileMessage","place","origin","parts","undefined","message","stack","fatal","ruleId","file","actual","expected","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","bail","getPrototypeOf","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","tokenize","effects","previous","contentStart","attempt","parser","constructs","contentInitial","consume","enter","exit","factorySpace","lineStart","token","contentType","markdownLineEnding","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","splice","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","size","ok","nok","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","unshift","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","partial","initial","blankLine","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","list","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","from","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","fromCharCode","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","markdownSpace","initialSize","kind","asciiDigit","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","max","limit","balance","destinationEnclosedBefore","asciiControl","destinationRaw","destinationEnclosed","destinationEnclosedEscape","markdownLineEndingOrSpace","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","identifier","labelAfter","normalizeIdentifier","titleConstruct","defined","before","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","asciiAlpha","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","asciiAlphanumeric","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterReference","test","numeric","asciiHexDigit","decodeNamedCharacterReference","characterEscape","asciiPunctuation","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","classifyCharacter","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","asciiAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","parseInt","lang","depth","parent","referenceType","ancestor","decodeString","fragment","decodeNumericCharacterReference","ordered","spread","checked","compiler","postprocess","combineExtensions","defaultConstructs","concat","extensions","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","extension","left","right","props","pointStart","pointEnd","clean","toUpperCase","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","head","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","items","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","visit","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","remove","unwrapDisallowed","thing","valid","dash","cap","kebab","$0","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","$1","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes"],"sourceRoot":""}