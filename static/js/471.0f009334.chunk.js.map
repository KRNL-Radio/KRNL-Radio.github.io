{"version":3,"file":"static/js/471.0f009334.chunk.js","mappings":"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","sources":["components/Countdown.tsx","pages/show.tsx","util/clamp.ts"],"sourcesContent":["import React from \"react\";\nimport clamp from \"../util/clamp\";\n\nexport interface CountdownComponents {\n  days: boolean;\n  hours: boolean;\n  minutes: boolean;\n  seconds: boolean;\n}\n\ninterface CountdownResult {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\n// you can use any style here, i personally like \"font-mono text-2xl\"!\nfunction Countdown({\n  to,\n  hideDays,\n  children,\n}: {\n  to: Date;\n  hideDays: boolean;\n  children?: React.ReactNode;\n}) {\n  // DD:HH:MM:SS\n\n  const [countdown, setCountdown] = React.useState<CountdownResult>({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  const [completed, setCompleted] = React.useState(false);\n\n  React.useEffect(() => {\n    const updateCountdown = () => {\n      let now = new Date();\n      let diff = to.getTime() - now.getTime();\n      if (diff < 0) {\n        diff = 0;\n      }\n      if (diff === 0 && completed === false) {\n        setCompleted(true);\n      }\n      let days = 0;\n      if (hideDays === false) {\n        days = Math.floor(diff / (1000 * 60 * 60 * 24));\n        diff -= days * (1000 * 60 * 60 * 24);\n      }\n      let hours = Math.floor(diff / (1000 * 60 * 60));\n      diff -= hours * (1000 * 60 * 60);\n      let minutes = Math.floor(diff / (1000 * 60));\n      diff -= minutes * (1000 * 60);\n      let seconds = Math.floor(diff / 1000);\n      setCountdown({\n        days: clamp(days, 0, 99),\n        hours: clamp(hours, 0, 99),\n        minutes: clamp(minutes, 0, 99),\n        seconds: clamp(seconds, 0, 99),\n      });\n    };\n    updateCountdown();\n    let interval = setInterval(updateCountdown, 1000);\n    return () => clearInterval(interval);\n  }, [to, hideDays, completed]);\n\n  if (completed && children) {\n    return <>{children}</>;\n  }\n\n  if (hideDays) {\n    return (\n      <span className=\"countdown font-mono\">\n        <span\n          style={{ \"--value\": countdown.hours } as React.CSSProperties}\n        ></span>\n        h\n        <span\n          style={{ \"--value\": countdown.minutes } as React.CSSProperties}\n        ></span>\n        m\n        <span\n          style={{ \"--value\": countdown.seconds } as React.CSSProperties}\n        ></span>\n        s\n      </span>\n    );\n  } else {\n    return (\n      <span className=\"countdown font-mono\">\n        <span\n          style={{ \"--value\": countdown.days } as React.CSSProperties}\n        ></span>\n        d\n        <span\n          style={{ \"--value\": countdown.hours } as React.CSSProperties}\n        ></span>\n        h\n        <span\n          style={{ \"--value\": countdown.minutes } as React.CSSProperties}\n        ></span>\n        m\n        <span\n          style={{ \"--value\": countdown.seconds } as React.CSSProperties}\n        ></span>\n        s\n      </span>\n    );\n  }\n}\n\nCountdown.defaultProps = {\n  hideDays: false,\n};\n\nexport default Countdown;\n","import { Link, useParams } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Markdown from \"../components/Markdown\";\nimport MemberCard from \"../components/MemberCard\";\nimport { findShowByName } from \"../data/shows\";\nimport Countdown from \"../components/Countdown\";\n\nfunction IndividualShowPage() {\n  const { name } = useParams();\n  const show = findShowByName(name || \"\", true);\n  if (!show) {\n    return <div>Show not found</div>;\n  }\n  return (\n    <div className=\"text-white\">\n      <Header />\n      <div>\n        <div className=\"bg-gradient-to-b to-purple-900 from-purple-700 flex justify-center p-4 w-4/5 mx-auto rounded-lg m-4\">\n          <div className=\"flex flex-col items-center w-full\">\n            {/* if show.logo? exists then */}\n            {show.logo?.opaque ? (\n              <label className=\"swap swap-flip text-9xl\">\n                <input type=\"checkbox\" />\n\n                <div className=\"swap-on\">\n                  <img\n                    src={\n                      show.logo?.opaque\n                        ? show.logo?.opaque\n                        : \"https://via.placeholder.com/150\"\n                    }\n                    alt={show.name}\n                    className=\"rounded-3xl w-96 object-cover drop-shadow-md\"\n                  />\n                </div>\n                <div className=\"swap-off\">\n                  <img\n                    src={\n                      show.logo?.transparent\n                        ? show.logo?.transparent\n                        : \"https://via.placeholder.com/150\"\n                    }\n                    alt={show.name}\n                    className=\"rounded-3xl w-96 object-cover drop-shadow-md\"\n                  />\n                </div>\n              </label>\n            ) : (\n              <label></label>\n            )}\n            <h1 className=\"text-2xl\">{show.name}</h1>\n            <h2 className=\"text-xl\">{show.splash_text}</h2>\n            <Countdown to={show.schedule.getNextOccurance()!} />\n            <Markdown className=\"p-4 bg-violet-700 rounded-xl my-8 text-center\">\n              {show.description || \"*No description!*\"}\n            </Markdown>\n            <div className=\"w-full\">\n              <h2 className=\"text-xl text-center\">Hosts</h2>\n              <div className=\"flex flex-wrap justify-center p-4 w-full\">\n                {/* add a list of the hosts that are on the show */}\n                {show.hosts.map((host) => {\n                  return <MemberCard member={host} key={host.name} />;\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* center a back link */}\n        <div className=\"flex justify-center\">\n          <Link to=\"/schedule/shows\" className=\"text-white\">\n            Back to Shows\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default IndividualShowPage;\n","export default function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n"],"names":["Countdown","to","hideDays","children","React","days","hours","minutes","seconds","countdown","setCountdown","completed","setCompleted","updateCountdown","now","Date","diff","getTime","Math","floor","clamp","interval","setInterval","clearInterval","className","style","defaultProps","name","useParams","show","findShowByName","logo","opaque","type","src","alt","transparent","splash_text","schedule","getNextOccurance","description","hosts","map","host","member","value","min","max"],"sourceRoot":""}