{"version":3,"file":"static/js/147.3a3a1501.chunk.js","mappings":"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","sources":["../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","../node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","../node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","../node_modules/tsparticles-plugin-absorbers/esm/index.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","../node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","../node_modules/tsparticles-updater-destroy/esm/index.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","../node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","../node_modules/tsparticles-plugin-emitters/esm/Emitters.js","../node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","../node_modules/tsparticles-plugin-emitters/esm/index.js","../node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","../node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","../node_modules/tsparticles-interaction-external-trail/esm/index.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","../node_modules/tsparticles-updater-roll/esm/RollUpdater.js","../node_modules/tsparticles-updater-roll/esm/index.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-angle/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-angle/esm/RotateUpdater.js","../node_modules/tsparticles-updater-angle/esm/index.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","../node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","../node_modules/tsparticles-updater-tilt/esm/index.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","../node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","../node_modules/tsparticles-updater-twinkle/esm/index.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","../node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","../node_modules/tsparticles-updater-wobble/esm/index.js","../node_modules/tsparticles/esm/index.js"],"sourcesContent":["export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = (_a = this.colorOffset) !== null && _a !== void 0 ? _a : {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        var _a, _b, _c;\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n        if (splitOptions.color) {\n            options.color.load(splitOptions.color);\n        }\n        else if (splitOptions.colorOffset && parentColor) {\n            options.color.load({\n                value: {\n                    hsl: {\n                        h: parentColor.h + getRangeValue((_a = splitOptions.colorOffset.h) !== null && _a !== void 0 ? _a : 0),\n                        s: parentColor.s + getRangeValue((_b = splitOptions.colorOffset.s) !== null && _b !== void 0 ? _b : 0),\n                        l: parentColor.l + getRangeValue((_c = splitOptions.colorOffset.l) !== null && _c !== void 0 ? _c : 0),\n                    },\n                },\n            });\n        }\n        else {\n            options.color.load({\n                value: {\n                    hsl: parent.getFillColor(),\n                },\n            });\n        }\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && modeEmitters.value instanceof Array) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n        }\n        const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n","const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n","import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n","import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n","export class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        var _a;\n        const shapeData = particle.shapeData, angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange =\n            typeof angle !== \"object\"\n                ? {\n                    min: 0,\n                    max: (angle * Math.PI) / 180,\n                }\n                : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n","import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h, s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s, l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n","import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n","export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n","import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer());\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        particle.opacity.initialValue = particle.opacity.value;\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n","import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n","import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n","import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n","import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData, sides = Math.round(getRangeValue((_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5));\n        return sides;\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n","import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case \"increasing\":\n            if (particle.size.value >= maxValue) {\n                particle.size.status = \"decreasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.size.value <= minValue) {\n                particle.size.status = \"increasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape([\"edge\", \"square\"], drawer);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const sides = particle.sides, inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n    particleInit(container, particle) {\n        var _a;\n        const star = particle.shapeData, inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !colorValue.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const h = particle.strokeColor.h;\n    if (h) {\n        updateColorValue(delta, h, particle.strokeAnimation.h, 360, false);\n    }\n    const s = particle.strokeColor.s;\n    if (s) {\n        updateColorValue(delta, s, particle.strokeAnimation.s, 100, true);\n    }\n    const l = particle.strokeColor.l;\n    if (l) {\n        updateColorValue(delta, l, particle.strokeAnimation.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b, _c;\n        const container = this.container;\n        const stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue((_a = stroke.opacity) !== null && _a !== void 0 ? _a : 1);\n        particle.strokeAnimation = (_b = stroke.color) === null || _b === void 0 ? void 0 : _b.animation;\n        const strokeHslColor = (_c = rangeColorToHsl(stroke.color)) !== null && _c !== void 0 ? _c : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const color = particle.strokeAnimation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && particle.strokeColor.h.enable) ||\n                (((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && particle.strokeColor.s.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && particle.strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    await engine.addShape(validTypes, new TextDrawer());\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n"],"names":["AbsorberSizeLimit","this","radius","mass","data","undefined","AbsorberSize","density","value","limit","load","ValueWithRandom","Absorber","color","OptionsColor","draggable","opacity","destroy","orbits","size","name","position","x","setRangeValue","y","AbsorberInstance","absorbers","container","options","_a","_b","_c","initialPosition","Vector","dragging","getRangeValue","retina","pixelRatio","reduceFactor","rangeColorToRgb","b","g","r","copy","calcPosition","particle","mouse","interactivity","clicking","downPosition","getDistance","pos","getPosition","getDistances","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","needsNewPosition","updateParticlePosition","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","isPointInside","canvas","exactPosition","calcPositionOrRandomFromSizeRanged","destroyed","canvasSize","newPosition","calcPositionOrRandomFromSize","setTo","velocity","initialVelocity","angle","getRandom","minSize","min","width","height","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","cos","sin","moveSpeed","addV","addTo","Absorbers","array","interactivityAbsorbers","getAbsorber","idxOrName","find","t","addAbsorber","absorber","push","draw","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","itemFromSingleOrMultiple","absorbersOptions","aPosition","clickPosition","actualOptions","modes","executeOnSingleOrMultiple","attract","index","indexOf","splice","resize","AbsorbersPlugin","id","source","needsPlugin","tmp","Array","events","onClick","isInArray","loadAbsorbersPlugin","engine","plugin","addPlugin","DestroyBounds","bottom","left","right","top","SplitFactor","SplitRate","max","Split","count","factor","rate","sizeOffset","particles","deepExtend","colorOffset","h","s","l","Destroy","bounds","split","DestroyUpdater","destroyOptions","splitCount","destroyBounds","sources","override","isEnabled","parent","splitParticlesOptions","splitOptions","loadParticlesOptions","getValue","parentColor","getFillColor","hsl","move","center","offset","randomInRange","addParticle","group","unbreakable","setTimeout","particlesSplitOptions","i","addSplitParticle","loadDestroyUpdater","addParticleUpdater","CircleShape","theta","a","randomTheta","u","atan","tan","generateTheta","maxRadius","sqrt","randomRadius","EmitterLife","wait","delay","duration","EmitterRate","quantity","EmitterSize","Emitter","autoPlay","life","shape","startCount","direction","domId","spawnColor","AnimatableColor","EmitterInstance","emitters","_d","_e","_f","_g","_h","_engine","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_shape","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","particlesOptions","rangeColorToHsl","_paused","_particlesOptions","_lifeCount","_immortal","dispatchEvent","emitter","play","pause","element","document","getElementById","elRect","getBoundingClientRect","_emitDelay","prepareToDie","delta","emitParticles","_duration","emit","removeEmitter","getSize","singleParticlesOptions","hslAnimation","animation","setColorAnimation","pPosition","randomPosition","initValue","maxValue","enable","emitFactor","speed","fpsLimit","Emitters","interactivityEmitters","random","getEmitter","addEmitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","modeEmitters","emittersModeOptions","usedIndexes","idx","arrayRandomIndex","includes","itemFromArray","emittersOptions","ePosition","update","shapes","Map","ShapeManager","drawer","set","get","keys","randomSquareCoordinate","SquareShape","halfW","halfH","side","floor","EmittersPlugin","map","emitterMode","loadEmittersPlugin","addEmitterShape","addShape","Trail","pauseOnStop","TrailMaker","_delay","trailOptions","trail","optDelay","canEmit","_lastPosition","inside","onHover","ExternalInteractorBase","loadExternalTrailInteraction","addInteractor","RollLight","Roll","darken","enlighten","backColor","RollUpdater","roll","rollHorizontal","horizontal","rollVertical","vertical","d","rollOpt","alterType","alter","type","spawning","updateRoll","loadRollUpdater","initPjs","particlesJS","tagId","pathConfigJson","callback","loadJSON","then","catch","setOnClickHandler","pJSDom","dom","RotateAnimation","decay","sync","Rotate","path","RotateUpdater","rotateOptions","rotate","pathRotation","rotateDirection","status","rotateAnimation","rotation","updateAngle","loadAngleUpdater","BaseMover","gravityOptions","gravity","spinOptions","spin","acceleration","inverse","spinPos","spinCenter","spinAcceleration","particleOptions","moveOptions","slowFactor","slow","inRange","getProximitySpeedFactor","baseSpeed","moveDrift","drift","maxSize","getRangeMax","maxCanvasSize","pathOptions","lastPathTime","pathDelay","pathGenerator","generate","clamp","applyPath","gravityFactor","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","vibrate","dxFixed","abs","dyFixed","hDistance","maxDistance","vDistance","misplaced","vel","applyDistance","loadBaseMover","addMover","CircleDrawer","circleRange","shapeData","loadCircleShape","updateColorValue","valueAnimation","decrease","colorValue","loops","maxLoops","ColorUpdater","hslColor","reduceDuplicates","getHslAnimationFromHsl","animationOptions","updateColor","loadColorUpdater","Attract","easing","Attractor","handleClickMode","finish","attractModeDistance","mouseMoveStatus","mouseMoveEvent","hoverEnabled","hoverMode","clickEnabled","clickMode","hoverAttract","clickAttract","mousePos","attractRadius","processAttract","Circle","area","attractOptions","query","quadTree","p","attractFactor","getEasing","normVec","subFrom","loadExternalAttractInteraction","Bounce","Bouncer","bounce","bounceModeDistance","divs","onDiv","processMouseBounce","divModeExecute","selector","div","singleSelectorBounce","isDivModeEnabled","circleBounce","circleBounceDataFromParticle","Rectangle","rectBounce","calculateBounds","tolerance","processBounce","querySelectorAll","forEach","item","elem","pxRatio","offsetLeft","offsetWidth","offsetTop","offsetHeight","loadExternalBounceInteraction","BubbleBase","mix","sourceColor","BubbleDiv","selectors","replace","ids","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","Bubbler","bubble","force","bubbleModeDistance","bubbleModeSize","hoverBubble","clickBubble","singleSelectorHover","divBubble","mouseClickPos","queryCircle","durationEnd","distMouse","timeSpent","Date","getTime","clickTime","sizeData","bubbleObj","optValue","particlesObj","process","opacityData","hoverBubbleColor","pointDistance","hoverBubbleSize","hoverBubbleOpacity","reset","mouseLeaveEvent","bubbleOptions","finalColor","modeColor","bubbleColor","pColor","rgbToHsl","colorMix","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","contains","divMode","clear","loadExternalBubbleInteraction","ConnectLinks","Connect","links","lineLinked","line_linked","lineStyle","ctx","p1","p2","connectOptions","connect","gradStop","color1","color2","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","getStyleFromHsl","gradient","drawConnection","ls","pos1","pos2","begin","end","drawLine","lineWidth","strokeStyle","stroke","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","blink","consent","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","optColor","grabLineColor","linksOptions","getLinkRandomColor","getLinkColor","loadExternalGrabInteraction","Pauser","getAnimationStatus","loadExternalPauseInteraction","Push","default","groups","particles_nb","Pusher","pushOptions","pushNb","groupOptions","loadExternalPushInteraction","Remove","Remover","remove","removeNb","removeQuantity","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","repulse","repulseModeDistance","hoverRepulse","clickRepulse","singleSelectorRepulse","divRepulse","repulseDistance","range","vect","processRepulse","repulseOptions","repulseFactor","loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","particlePos","dist","proximityFactor","loadExternalSlowInteraction","currentColorRegex","loadImage","image","Promise","resolve","loading","img","Image","addEventListener","error","console","src","downloadSvgImage","fetch","response","ok","text","svgData","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","Object","assign","loaded","replaceColor","replace_color","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","img2","ImageDrawer","_images","containerImages","getImages","images","globalAlpha","drawImage","loadImageShape","loadShape","particleInit","close","Error","addImage","imageFunc","LifeDelay","LifeDuration","minimumValue","Life","LifeUpdater","lifeOptions","delayTime","time","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","moveTo","lineTo","loadLineShape","OpacityUpdater","opacityOptions","getRangeMin","opacityAnimation","opacityRange","startValue","initialValue","minValue","checkDestroy","updateOpacity","loadOpacityUpdater","BounceOutMode","outMode","handled","plugins","particleBounce","bounced","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","outType","moveCenter","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","atan2","wrap","warp","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","updaters","outModes","updateOutMode","loadOutModesUpdater","ParallaxMover","isSsr","parallax","parallaxForce","canvasCenter","parallaxSmooth","smooth","centerDistance","loadParallaxMover","attractDistance","ax","ay","p1Factor","p2Factor","ParticlesInteractorBase","loadParticlesAttractInteraction","updateAbsorb","r1","r2","collisions","absorb","resolveCollision","Collider","radius1","radius2","round","z","loadParticlesCollisionsInteraction","CircleWarp","point","posNE","posSE","posSW","rect","circle","biggerCircle","rectSW","LinksShadow","blur","LinksTriangle","frequency","Links","shadow","triangles","getLinkDistance","optDistance","pos2NE","pos2SE","pos2SW","Linker","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","destination","setColor","linkColor","loadInteraction","setLinkFrequency","dictionary","key","sort","join","res","LinkInstance","_freqs","pOptions","p1Links","filter","getLinkFrequency","link","drawTriangles","drawLinkLine","twinkle","lines","twinkleFreq","twinkleRgb","backgroundMask","composite","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","globalCompositeOperation","shadowColor","shadowBlur","link1","link2","p3","triangleOptions","opacityTriangle","pos3","colorTriangle","drawTriangle","drawLinkTriangle","vertices","linkFreq","findIndex","vertex","getTriangleFrequency","LinksPlugin","loadPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","start","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","polygon","sides","nb_sides","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","SizeUpdater","sizeAnimation","sizeAnimationSpeed","sizeVelocity","updateSize","loadSizeUpdater","fixFactor","SquareDrawer","loadSquareShape","StarDrawer","inset","starInset","star","loadStarShape","StrokeColorUpdater","strokeWidth","strokeOpacity","strokeAnimation","strokeHslColor","strokeColor","updateStrokeColor","loadStrokeColorUpdater","validTypes","TextDrawer","character","textData","textParticle","randomIndexData","style","weight","font","offsetX","fillText","strokeText","shapeOptions","promises","loadFont","all","loadTextShape","loadSlim","TiltAnimation","Tilt","TiltUpdater","tilt","cosDirection","c","sinDirection","tiltOptions","tiltDirection","tiltAnimation","updateTilt","loadTiltUpdater","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","zOpacityFactor","opacityRate","twinklingOpacity","twinkleStyle","needsTwinkle","loadTwinkleUpdater","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","wobbleOpt","wobble","angleSpeed","wobbleDistance","updateWobble","loadWobbleUpdater","loadFull"],"sourceRoot":""}