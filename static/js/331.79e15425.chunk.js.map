{"version":3,"file":"static/js/331.79e15425.chunk.js","mappings":"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","sources":["components/Card.tsx","components/ShowCard.tsx","data/shows.ts","pages/schedule.tsx"],"sourcesContent":["import type { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./card.css\"; // i wanna convert this to tailwind eventually!\n\nexport type CardBadge = {\n  icon?: IconDefinition;\n  text?: string;\n  background?: string;\n};\n\nfunction Card({\n  title,\n  subtitle,\n  background,\n  badge,\n  onClick,\n}: {\n  title: string;\n  subtitle: string;\n  background?: string;\n  badge?: CardBadge;\n  onClick?: () => void;\n}) {\n  if (onClick === undefined) {\n    onClick = () => {};\n  }\n\n  // if (background !== undefined) {\n  //   background = `linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .90) 100%), url(${background})`;\n  // }\n\n  if (background === undefined) {\n    background =\n      \"linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .90) 100%)\";\n  } else {\n    if (background.startsWith(\"http\") || background.startsWith(\"/\")) {\n      background = `linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .90) 100%), url(${background})`;\n    } else if (background.startsWith(\"#\")) {\n      background = `linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .90) 100%), ${background}`;\n    } else {\n      console.error(\"Invalid background type!\");\n      background = `linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .90) 100%), url(${background})`;\n      // background = \"linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .90) 100%)\";\n    }\n  }\n\n  return (\n    <div\n      className=\"card m-1 overflow-hidden\"\n      onMouseMove={(e) => {\n        for (const card of Array.from(\n          document.getElementsByClassName(\n            \"card\"\n          ) as HTMLCollectionOf<HTMLElement>\n        )) {\n          const rect = card.getBoundingClientRect(),\n            x = e.clientX - rect.left,\n            y = e.clientY - rect.top;\n          card.style.setProperty(\"--mouse-x\", `${x}px`);\n          card.style.setProperty(\"--mouse-y\", `${y}px`);\n        }\n      }}\n      onClick={onClick}\n    >\n      <div\n        className=\"card-content\"\n        style={{\n          background: background,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      >\n        <div className=\"card-badge-wrapper h-[140px]\">\n          {badge !== undefined && (\n            <div\n              className={`origin-top p-2 float-right mt-9 mr-9 w-72 text-center translate-x-[50%] rotate-45 z-4 ${\n                badge.background || \"bg-purple-500\"\n              }`}\n            >\n              {badge.icon !== undefined && (\n                <FontAwesomeIcon\n                  icon={badge.icon}\n                  className=\"text-white text-lg\"\n                />\n              )}\n              <p className=\"text-white text-md font-bold\">{badge.text}</p>\n            </div>\n          )}\n        </div>\n        {/* <div className=\"card-image\"></div> */}\n        <div className=\"card-info-wrapper\">\n          <div className=\"card-info\">\n            <div className=\"card-info-title\">\n              <h3>{title}</h3>\n              <h4>{subtitle}</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import { useNavigate } from \"react-router-dom\";\nimport { Show } from \"../data/shows\";\nimport { slugify } from \"../util/slug\";\nimport Card from \"./Card\";\n\nfunction ShowCard({ show }: { show: Show }) {\n  const nav = useNavigate();\n  let clickHandler = () => {\n    nav(`/schedule/shows/${slugify(show.name)}`);\n  };\n  let bg = show.logo?.opaque || show.background;\n  return (\n    <Card\n      title={show.name}\n      subtitle={show.scheduleString}\n      background={bg}\n      onClick={clickHandler}\n    />\n  );\n}\n\nexport default ShowCard;\n","import { slugify } from \"../util/slug\";\nimport { getHostByName, Host, KRNL_HOST } from \"./hosts\";\nimport { ScheduleItem } from \"./schedule\";\nexport type ShowLogo = {\n  transparent: string;\n  opaque: string;\n};\n\nexport type Show = {\n  name: string;\n  splash_text: string;\n  description: string;\n  hosts: Host[];\n  logo?: ShowLogo;\n  background?: string;\n  guests?: string; // any guests on the show. they don't get their own page, but they get a mention on the show page.\n  scheduleString: string;\n  schedule: ScheduleItem;\n  hidden?: boolean;\n  hiddenAfter?: Date;\n};\n\nexport const shows: Show[] = [\n  {\n    name: \"The Graveyard Shift\",\n    splash_text: \"\",\n    description:\n      \"Alt is such a broad genre. What does any of it even mean? All I know is you love listening to me every week.\",\n    background: \"#fc73e3\",\n    hosts: [getHostByName(\"Adrien\")],\n    scheduleString: \"Every Tuesday from 10pm to 11pm\",\n    schedule: new ScheduleItem(\"0 22 * * 2\", 60),\n  },\n  {\n    name: \"Stochastic Shuffle\",\n    splash_text: \"Unpredictability at its finest - every time, by design!\",\n    description:\n      \"This is a totally unplanned show, where anything can happen (within contractual obligations). There's no logic behind this show, it just is.\",\n    background: \"#0f3cec\",\n    hosts: [getHostByName(\"Mark\")],\n    scheduleString: \"Every Monday from 9 pm to 10 pm\",\n    schedule: new ScheduleItem(\"0 21 * * 1\", 60),\n  },\n  {\n    name: \"The Vibe\",\n    splash_text: \"vibes~\",\n    description:\n      \"Somehow even *more* random than Mark's show, but at least 10x more chill! Ice not required.\\n\\n*when he feels like it\",\n    background: \"#1c2dae\",\n    hosts: [getHostByName(\"Grayson\")],\n    scheduleString: \"Every Sunday from 4pm to 5pm*\",\n    schedule: new ScheduleItem(\"0 16 * * 0\", 60),\n  },\n  {\n    name: \"The After School Special\",\n    splash_text: \"Because no one else streams earlier!\",\n    description:\n      \"I play music, different vibes every week, and do some rambling (usually too much rambling)\",\n    background: \"#6f69dd\",\n    hosts: [getHostByName(\"Sophie\")],\n    scheduleString: \"Every Thursday from 3:30pm to 4:30pm\",\n    schedule: new ScheduleItem(\"30 15 * * 4\", 60),\n  },\n  {\n    name: \"Latino Hour\",\n    splash_text: \":D\",\n    description: \"Just vibe and listen to music from across Latin America.\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Zoe\")],\n    scheduleString: \"Every Friday from 4pm to 5pm\",\n    schedule: new ScheduleItem(\"0 16 * * 5\", 60),\n  },\n  {\n    name: \"Timezones\",\n    splash_text: \"International Music and Good Vibes\",\n    description:\n      \"Come and listen to music from all over the world! There's no jet lag here, only Timezones.\",\n    background: \"#232323\",\n    hosts: [getHostByName(\"Trey\"), getHostByName(\"Zoe\")],\n    scheduleString: \"Every Wednesday from 3:30pm to 4:30pm\",\n    schedule: new ScheduleItem(\"30 15 * * 3\", 60),\n  },\n  // {\n  //   name: \"The Bard's Tale\",\n  //   splash_text: \"Where every note tells a tale of bravery, magic, and mayhem!\",\n  //   description: \"\",\n  //   background: \"#ddfe60\",\n  //   hosts: [getHostByName(\"Solace\")],\n  //   scheduleString: \"Every Sunday from 1pm to 3pm\",\n  //   schedule: new ScheduleItem(\"0 13 * * 0\", 120),\n  // },\n  {\n    name: \"CCPR\",\n    splash_text: \"Cornell College Public Radio\",\n    description: \"Because we can do anything in 18 ~~days~~ minutes!\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Adrien\"), getHostByName(\"Sophie\")],\n    scheduleString: \"Every Monday from 8:05am to 8:23am\",\n    schedule: new ScheduleItem(\"5 8 * * 1\", 18),\n  },\n  // {\n  //   name: \"CCPR (Previously Recorded)\",\n  //   splash_text: \"\",\n  //   description: \"Missed the live show? No worries, we got you covered!\",\n  //   background: \"#ddfe60\",\n  //   hosts: [getHostByName(\"Adrien\"), getHostByName(\"Sophie\")],\n  // }\n  {\n    name: \"The Box\",\n    splash_text: \"\",\n    description: \"Vibe with music and the occasional conversation\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Brock\")],\n    guests: \"Garnett Strack\",\n    scheduleString: \"Every Friday from 8pm to 9pm\",\n    schedule: new ScheduleItem(\"0 20 * * 5\", 60),\n  },\n  {\n    name: \"Twin Suns\",\n    splash_text: \"\",\n    description:\n      \"A show about Star Wars (and other stuff idk im making stuff up ~mark)\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Jake\"), getHostByName(\"Sami\")],\n    scheduleString: \"Every Tuesday from 8:30pm to 9:30pm\", // i think?\n    schedule: new ScheduleItem(\"30 20 * * 2\", 60),\n  },\n  {\n    name: \"Melatonin\",\n    splash_text: \"\",\n    description: \"WORK IN PROGRESS - Check Instagram for updates!\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Mark\")],\n    scheduleString: \"Every Saturday from 11pm to 1am (for now)\",\n    schedule: new ScheduleItem(\"0 23 * * 6\", 120),\n  },\n];\n\nexport function getShowByName(name: string): Show | undefined {\n  return shows.find((show) => show.name === name);\n}\n\nexport function getShowsByHost(host: Host): Show[] {\n  return shows.filter(\n    (show) => show.hosts.includes(host) || show.hosts.includes(KRNL_HOST),\n  );\n}\n\nexport function getAllShows(): Show[] {\n  return shows.filter((show) => {\n    if (show.hidden === true) {\n      return false;\n    }\n    if (show.hiddenAfter !== undefined) {\n      if (show.hiddenAfter.getTime() < Date.now()) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nexport function findShowByName(name: string, slug?: boolean): Show | undefined {\n  if (slug === true) {\n    return shows.find((show) => slugify(show.name) === slugify(name));\n  }\n  return shows.find((show) => show.name === name);\n}\n\nexport function getNearestShows(): Show[] {\n  // const now = new Date();\n  const nearest = getAllShows()\n    .filter((show) => show.schedule.getNextOccurance() !== undefined)\n    .sort((a, b) => {\n      const aDate = a.schedule.getNextOccurance();\n      const bDate = b.schedule.getNextOccurance();\n      if (aDate === undefined || bDate === undefined) {\n        return 0;\n      }\n      return aDate.getTime() - bDate.getTime();\n    });\n  return nearest;\n}\n\nexport function getCurrentShows(): Show[] {\n  return getAllShows().filter((show) => show.schedule.isCurrent());\n}\n\nexport function sortShowsByNextOccurance(shows: Show[]): Show[] {\n  return shows.sort((a, b) => {\n    const aDate = a.schedule.getNextOccurance();\n    const bDate = b.schedule.getNextOccurance();\n    if (aDate === undefined || bDate === undefined) {\n      // whatever one has a date is first\n      if (aDate !== undefined) {\n        return -1;\n      }\n      if (bDate !== undefined) {\n        return 1;\n      }\n      // else, they're both undefined, so by name it goes!\n      return a.name.localeCompare(b.name);\n    }\n    return aDate.getTime() - bDate.getTime();\n  });\n}\n\nexport function sortShowsByName(shows: Show[]): Show[] {\n  return shows.sort((a, b) => {\n    // if the show starts with \"The\", ignore it\n    const aName = a.name.startsWith(\"The \") ? a.name.slice(4) : a.name;\n    const bName = b.name.startsWith(\"The \") ? b.name.slice(4) : b.name;\n    return aName.localeCompare(bName);\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport ShowCard from \"../components/ShowCard\";\nimport { isScheduleSuppressed, scheduleSuppressedBy } from \"../data/events\";\nimport { getCurrentShows, getNearestShows } from \"../data/shows\";\n\nfunction SchedulePage() {\n  return (\n    <div className=\"text-white\">\n      <Header />\n      <div>\n        <div className=\"flex flex-col items-center justify-center p-4\">\n          <h1 className=\"text-4xl font-bold\">Schedule</h1>\n          {isScheduleSuppressed() ? (\n            <div className=\"bg-gradient-to-b to-blue-900 from-blue-700 flex justify-center p-4 w-4/5 mx-auto rounded-lg m-4\">\n              <div className=\"flex flex-col items-center w-full\">\n                <h1 className=\"text-2xl\">On Break</h1>\n                <p>{scheduleSuppressedBy()[0].effects.schedule?.message}</p>\n              </div>\n            </div>\n          ) : (\n            <React.Fragment>\n              {getCurrentShows().map((show) => (\n                <div className=\"bg-gradient-to-b to-red-900 from-red-700 flex justify-center p-4 w-4/5 mx-auto rounded-lg m-4\">\n                  <div className=\"flex flex-col items-center w-full\">\n                    <h1 className=\"text-2xl\">Live Now</h1>\n                    <ShowCard show={show} key={show.name} />\n                  </div>\n                </div>\n              ))}\n              <div className=\"bg-gradient-to-b to-yellow-700 from-yellow-500 flex justify-center p-4 w-4/5 mx-auto rounded-lg m-4\">\n                <div className=\"flex flex-col items-center w-full\">\n                  <h1 className=\"text-2xl\">Up Next</h1>\n                  {getNearestShows()\n                    .slice(0, 5)\n                    .map((show) => (\n                      <ShowCard show={show} key={show.name} />\n                    ))}\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <Link\n            to=\"shows\"\n            className=\"cursor-pointer bg-gradient-to-b to-green-900 via-green-700 from-green-500 bg-size-200 transition-all bg-pos-0 hover:bg-pos-100 flex justify-center p-4 w-4/5 mx-auto rounded-lg m-4\"\n          >\n            <div className=\"flex flex-col items-center w-full\">\n              <h1 className=\"text-2xl\">View All Shows</h1>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SchedulePage;\n"],"names":["title","subtitle","background","badge","onClick","undefined","startsWith","console","error","className","onMouseMove","e","Array","from","document","getElementsByClassName","card","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","style","setProperty","backgroundSize","backgroundPosition","icon","text","show","nav","useNavigate","bg","logo","opaque","name","scheduleString","slugify","shows","splash_text","description","hosts","getHostByName","schedule","ScheduleItem","guests","getShowsByHost","host","filter","includes","KRNL_HOST","getAllShows","hidden","hiddenAfter","getTime","Date","now","findShowByName","slug","find","getNearestShows","getNextOccurance","sort","a","b","aDate","bDate","getCurrentShows","isCurrent","sortShowsByName","aName","slice","bName","localeCompare","isScheduleSuppressed","scheduleSuppressedBy","effects","message","map","to"],"sourceRoot":""}