{"version":3,"file":"static/js/831.70cc1bed.chunk.js","mappings":"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","sources":["components/Countup.tsx","pages/special/infodesk.tsx"],"sourcesContent":["import React from \"react\";\nimport clamp from \"../util/clamp\";\n\nexport interface CountupComponents {\n  days: boolean;\n  hours: boolean;\n  minutes: boolean;\n  seconds: boolean;\n}\n\ninterface CountupResult {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\n// you can use any style here, i personally like \"font-mono text-2xl\"!\nfunction Countup({\n  from,\n  hideDays,\n  pause,\n  forceZero,\n}: {\n  from: Date;\n  hideDays: boolean;\n  pause: boolean;\n  forceZero: boolean;\n  children?: React.ReactNode;\n}) {\n  // DD:HH:MM:SS\n\n  const [countup, setCountup] = React.useState<CountupResult>({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  React.useEffect(() => {\n    const updateCountup = () => {\n      if (pause) return;\n      if (forceZero) {\n        setCountup({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        return;\n      }\n      let now = new Date();\n      let diff = now.getTime() - from.getTime();\n      let days = 0;\n      if (hideDays === false) {\n        days = Math.floor(diff / (1000 * 60 * 60 * 24));\n        diff -= days * (1000 * 60 * 60 * 24);\n      }\n      let hours = Math.floor(diff / (1000 * 60 * 60));\n      diff -= hours * (1000 * 60 * 60);\n      let minutes = Math.floor(diff / (1000 * 60));\n      diff -= minutes * (1000 * 60);\n      let seconds = Math.floor(diff / 1000);\n      setCountup({\n        days: clamp(days, 0, 99),\n        hours: clamp(hours, 0, 99),\n        minutes: clamp(minutes, 0, 99),\n        seconds: clamp(seconds, 0, 99),\n      });\n    };\n    updateCountup();\n    let interval = setInterval(updateCountup, 1000);\n    return () => clearInterval(interval);\n  }, [from, hideDays, pause, forceZero]);\n\n  if (hideDays) {\n    return (\n      <span className=\"countdown font-mono\">\n        <span\n          style={{ \"--value\": countup.hours } as React.CSSProperties}\n        ></span>\n        h\n        <span\n          style={{ \"--value\": countup.minutes } as React.CSSProperties}\n        ></span>\n        m\n        <span\n          style={{ \"--value\": countup.seconds } as React.CSSProperties}\n        ></span>\n        s\n      </span>\n    );\n  } else {\n    return (\n      <span className=\"countdown font-mono\">\n        <span style={{ \"--value\": countup.days } as React.CSSProperties}></span>\n        d\n        <span\n          style={{ \"--value\": countup.hours } as React.CSSProperties}\n        ></span>\n        h\n        <span\n          style={{ \"--value\": countup.minutes } as React.CSSProperties}\n        ></span>\n        m\n        <span\n          style={{ \"--value\": countup.seconds } as React.CSSProperties}\n        ></span>\n        s\n      </span>\n    );\n  }\n}\n\nCountup.defaultProps = {\n  hideDays: false,\n  pause: false,\n  forceZero: false,\n};\n\nexport default Countup;\n","import { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Countdown from \"../../components/Countdown\";\nimport Header from \"../../components/Header\";\nimport { SmallLoading, IconLoading } from \"../../components/LoadingScreens\";\nimport PlaceholderImage from \"../../assets/placeholder.jpg\";\nimport Silence from \"../../assets/silence.mp3\";\nimport { RequestTrack } from \"../../requests/core\";\nimport { getCurrentShows, getNearestShows, Show } from \"../../data/shows\";\nimport Countup from \"../../components/Countup\";\nimport { toast } from \"react-toastify\";\n\nfunction InfoDeskPlayerPage() {\n  const [isPrimed, setIsPrimed] = React.useState(false);\n  const [isRunning, setIsRunning] = React.useState(false);\n  const [isSkipping, setIsSkipping] = React.useState(false);\n  const [skipTitle, setSkipTitle] = React.useState(\"\");\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [title, setTitle] = React.useState(\"Loading...\");\n  const [host, setHost] = React.useState(\"Loading...\");\n  const [albumArt, setAlbumArt] = React.useState(PlaceholderImage);\n  const [nextShow, setNextShow] = React.useState<Show | null>(null);\n  const [startedAt, setStartedAt] = React.useState(new Date());\n  const [hasCurrentShow, setHasCurrentShow] = React.useState(false);\n\n  useEffect(() => {\n    window.player.start_fast_refresh();\n    let metadataCb = (data: any) => {\n      if (host !== data.host_string) {\n        setHost(data.host_string);\n        if (\n          data.host_string !== \"Loading...\" &&\n          data.host_string !== \"Max Jr.\"\n        ) {\n          if (isRunning) {\n            setIsPlaying(true);\n          }\n        } else {\n          if (isRunning) {\n            setIsPlaying(false);\n          }\n        }\n      }\n      if (isSkipping) {\n        setIsSkipping(false);\n        setSkipTitle(\"\");\n        window.player.play();\n      }\n    };\n    window.player.on(\"metadata\", metadataCb);\n    let trackCb = (data: any) => {\n      setNextShow(getCurrentShows()[0] || getNearestShows()[0]);\n      setHasCurrentShow(getCurrentShows().length > 0);\n      setTitle(data.title);\n      setAlbumArt(data.album_art);\n    };\n    window.player.on(\"current_track\", trackCb);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.player.stop_refreshing();\n      window.player.unbind(\"metadata\", metadataCb);\n      window.player.unbind(\"current_track\", trackCb);\n    };\n  });\n\n  useEffect(() => {\n    setStartedAt(new Date());\n    window.player.volume(1);\n    if (isPlaying) {\n      window.player.play();\n    } else {\n      window.player.unload();\n    }\n  }, [isPlaying]);\n\n  return (\n    <div>\n      <Header />\n      <h1 className=\"text-4xl text-center\">KRNL Dev Player</h1>\n      <h2 className=\"text-2xl text-center\">\n        For the info desk and/or totallynotmark6!\n      </h2>\n      <div className=\"flex flex-wrap justify-center p-4 w-full\">\n        {isPrimed ? (\n          <div className=\"btn btn-disabled btn-primary mx-2\" data-theme=\"dark\">\n            Primed\n          </div>\n        ) : (\n          <button\n            className=\"btn btn-primary mx-2\"\n            onClick={async () => {\n              setIsPrimed(true);\n              let audio = new Audio(Silence);\n              await audio.play();\n            }}\n          >\n            Prime\n          </button>\n        )}\n\n        <label\n          htmlFor=\"requests-modal\"\n          className=\"btn btn-secondary mx-2 cursor-pointer\"\n          id=\"requests-modal-icon\"\n        >\n          Open Request Menu\n        </label>\n      </div>\n      {isPrimed ? (\n        <div className=\"flex flex-wrap justify-center p-4 w-full\">\n          {isRunning ? (\n            <button\n              className=\"btn btn-primary mx-2\"\n              onClick={() => setIsRunning(false)}\n            >\n              Stop Monitoring\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-primary mx-2\"\n              onClick={() => setIsRunning(true)}\n            >\n              Start Monitoring\n            </button>\n          )}\n          {isPlaying ? (\n            <button\n              className=\"btn btn-secondary mx-2\"\n              onClick={() => setIsPlaying(false)}\n            >\n              Pause\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-accent mx-2\"\n              onClick={() => setIsPlaying(true)}\n            >\n              Play\n            </button>\n          )}\n          {isSkipping ? (\n            <div className=\"btn btn-error mx-2 btn-disabled\">Skipping</div>\n          ) : (\n            <button\n              className=\"btn btn-error mx-2\"\n              onClick={() => {\n                setIsSkipping(true);\n                window.player.unload();\n                setSkipTitle(\n                  window.player.player_data?.current_track.title || \"\",\n                );\n              }}\n            >\n              Skip\n            </button>\n          )}\n        </div>\n      ) : (\n        <></>\n      )}\n      <div className=\"text-xl text-center\">\n        <Countup from={startedAt} forceZero={!isPlaying} />\n      </div>\n      <div className=\"flex flex-wrap justify-center p-4 w-full\">\n        <img\n          src={albumArt}\n          alt=\"Album Art\"\n          className={\n            \"rounded-lg object-cover place-self-center w-1/12 h-1/12 select-none pointer-events-none transition duration-500 \" +\n            (isPlaying ? \"\" : \" filter grayscale\")\n          }\n        />\n        <div className=\"flex flex-col justify-center mx-4\">\n          <div className=\"text-2xl text-center\">{title}</div>\n          <div className=\"text-xl text-center\">{host}</div>\n        </div>\n      </div>\n      <div className=\"flex flex-wrap justify-center p-4 w-full\">\n        <div className=\"flex flex-col justify-center mx-4\">\n          <div className=\"text-3xl text-center\">Next Scheduled Show</div>\n          {nextShow ? (\n            <>\n              <div className=\"text-2xl text-center\">{nextShow.name}</div>\n              <div className=\"text-xl text-center\">\n                {nextShow.hosts.map((h) => h.name).join(\" & \")}\n              </div>\n              <div className=\"text-xl text-center\">\n                {hasCurrentShow ? (\n                  <div className=\"text-red-400\">\n                    <div>Ends in:</div>\n                    <Countdown\n                      to={nextShow.schedule.endToDate() || new Date()}\n                      hideDays={false}\n                    />\n                  </div>\n                ) : (\n                  <Countdown\n                    to={nextShow.schedule.getNextOccurance() || new Date()}\n                    hideDays={false}\n                  />\n                )}\n              </div>\n            </>\n          ) : (\n            <div className=\"text-xl text-center\">No shows scheduled</div>\n          )}\n        </div>\n      </div>\n      <div className=\"flex flex-wrap justify-center p-4 w-full\">\n        <button\n          className=\"btn btn-error mx-2\"\n          onClick={async () => {\n            await toast.promise(\n              new Promise((resolve, reject) => {\n                setTimeout(reject, 2760);\n              }),\n              {\n                pending: \"Running func setupNotifs()\",\n                success: \"it worked\",\n                error: \"it failed!!!!!1!1\",\n              },\n            );\n          }}\n        >\n          Run Dev Func (DO NOT PRESS)\n        </button>\n      </div>\n      {/* modal */}\n      <input\n        type=\"checkbox\"\n        id=\"requests-modal\"\n        className=\"modal-toggle\"\n        data-theme=\"luxury\"\n      />\n      <div className=\"modal modal-middle\" data-theme=\"luxury\">\n        <div className=\"modal-box\">\n          <div className=\"flex flex-row items-center\">\n            <RequestsModal />\n          </div>\n          <div className=\"modal-action\">\n            <label htmlFor=\"requests-modal\" className=\"btn\">\n              Close\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction RequestsModal() {\n  const [tracks, setTracks] = React.useState<RequestTrack[]>([]);\n  const [loading, setLoading] = React.useState(true);\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState<RequestTrack[]>([]);\n  const [status, setStatus] = React.useState(\n    window.player.requests_core.status,\n  );\n  const [pnr, setPnr] = React.useState(\n    window.player.requests_core.probable_next_request,\n  );\n  useEffect(() => {\n    window.player.requests_core.get_tracks().then((res_tracks) => {\n      setTracks(res_tracks);\n      setSearchResults(res_tracks);\n      setLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (searchText === \"\") {\n      setSearchResults(tracks);\n    } else {\n      setSearchResults(\n        tracks.filter(\n          (track) =>\n            track.title.toLowerCase().includes(searchText.toLowerCase()) ||\n            track.artist.toLowerCase().includes(searchText.toLowerCase()),\n        ),\n      );\n    }\n  }, [searchText, tracks]);\n\n  useEffect(() => {\n    let interv = setInterval(() => {\n      window.player.requests_core.update_throttle_status();\n      setStatus(window.player.requests_core.status);\n      setPnr(window.player.requests_core.probable_next_request);\n    }, 1000);\n    return function cleanup() {\n      clearInterval(interv);\n    };\n  }, []);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <div className=\"text-2xl text-white\">Request a Song</div>\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        className=\"input input-bordered w-full\"\n        onChange={(e) => setSearchText(e.target.value)}\n      />\n      {status === \"temporary_throttled\" || status === \"daily_throttled\" ? (\n        <div className=\"text-xl text-white\">\n          You've been throttled! Try again in about{\" \"}\n          <Countdown to={pnr} hideDays={true}></Countdown>\n        </div>\n      ) : (\n        <></>\n      )}\n      <div className=\"overscroll-contain overflow-auto h-96\">\n        {loading\n          ? SmallLoading()\n          : searchResults.map((track) => {\n              return (\n                <div\n                  className=\"flex flex-row items-center border-t p-2 w-full\"\n                  key={track.id}\n                >\n                  <LazyLoadImage\n                    src={track.artwork.url ?? PlaceholderImage}\n                    className=\"w-16 h-16 rounded-lg\"\n                    alt=\"\"\n                    effect=\"opacity\"\n                    placeholder={<IconLoading />}\n                  />\n                  {/* <img\n                      loading=\"lazy\"\n                      src={track.artwork.url ?? \"https://placekitten.com/128\"}\n                      className=\"w-16 h-16 rounded-lg\"\n                      alt=\"\"\n                    /> */}\n                  <div className=\"flex flex-col px-4\">\n                    <div className=\"text-white\">{track.title}</div>\n                    <div className=\"text-white\">{track.artist}</div>\n                  </div>\n                  <div className=\"flex flex-row items-center justify-end flex-grow\">\n                    <FontAwesomeIcon\n                      onClick={async () => {\n                        try {\n                          await window.player.requests_core.request(track.id);\n                        } catch (_) {}\n                        setStatus(window.player.requests_core.status);\n                        setPnr(\n                          window.player.requests_core.probable_next_request,\n                        );\n                      }}\n                      icon={solid(\"add\")}\n                      className=\"text-white text-xl p-2 cursor-pointer\"\n                    />\n                  </div>\n                </div>\n              );\n            })}\n        {searchResults.length === 0 && tracks.length !== 0 ? (\n          <div className=\"text-white text-xl\">No results found</div>\n        ) : (\n          <></>\n        )}\n        {tracks.length === 0 ? (\n          <div className=\"text-white text-xl\">Requests disabled!</div>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default InfoDeskPlayerPage;\n"],"names":["Countup","from","hideDays","pause","forceZero","countup","setCountup","React","days","hours","minutes","seconds","updateCountup","diff","Date","getTime","Math","floor","clamp","interval","setInterval","clearInterval","className","style","defaultProps","RequestsModal","tracks","setTracks","loading","setLoading","searchText","setSearchText","searchResults","setSearchResults","status","setStatus","window","player","requests_core","pnr","setPnr","probable_next_request","useEffect","get_tracks","then","res_tracks","filter","track","title","toLowerCase","includes","artist","interv","update_throttle_status","type","placeholder","onChange","e","target","value","Countdown","to","SmallLoading","map","LazyLoadImage","src","artwork","url","PlaceholderImage","alt","effect","onClick","async","request","id","_","icon","length","isPrimed","setIsPrimed","isRunning","setIsRunning","isSkipping","setIsSkipping","skipTitle","setSkipTitle","isPlaying","setIsPlaying","setTitle","host","setHost","albumArt","setAlbumArt","nextShow","setNextShow","startedAt","setStartedAt","hasCurrentShow","setHasCurrentShow","start_fast_refresh","metadataCb","data","host_string","play","on","trackCb","getCurrentShows","getNearestShows","album_art","stop_refreshing","unbind","volume","unload","Header","audio","Audio","Silence","htmlFor","player_data","current_track","name","hosts","h","join","schedule","endToDate","getNextOccurance","toast","Promise","resolve","reject","setTimeout","pending","success","error"],"sourceRoot":""}