{"version":3,"file":"static/js/374.e367028c.chunk.js","mappings":"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","sources":["pages/special/schedulegen.tsx"],"sourcesContent":["import { DateTime } from \"luxon\";\nimport React from \"react\";\nimport Header from \"../../components/Header\";\n// import { DateTime } from \"ts-luxon\";\nimport { ScheduleItem } from \"../../data/schedule\";\nimport createScheduleString from \"../../data/localizer\";\n\nfunction ScheduleGeneratorPage() {\n  // create a state for the dates\n  let [dates, setDates] = React.useState({\n    sunday: false,\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n    saturday: false,\n  });\n  // create a state for the start time\n  let [startTime, setStartTime] = React.useState({\n    hour: 0,\n    minute: 0,\n    string: \"12:00 AM\",\n  });\n  // create a state for the duration\n  let [duration, setDuration] = React.useState({\n    hour: 1,\n    minute: 0,\n    string: \"1:00\",\n  });\n\n  let [output, setOutput] = React.useState(\"\");\n\n  React.useEffect(() => {\n    // get the duration\n    let durationDT = DateTime.fromObject({\n      hour: duration.hour,\n      minute: duration.minute,\n    });\n\n    let fields = ScheduleItem.getParserFields();\n    // convert startTime.hour to a number\n    fields.hour = [Number(startTime.hour)];\n    fields.minute = [Number(startTime.minute)];\n    fields.dayOfWeek = [\n      dates.sunday ? 0 : -1,\n      dates.monday ? 1 : -1,\n      dates.tuesday ? 2 : -1,\n      dates.wednesday ? 3 : -1,\n      dates.thursday ? 4 : -1,\n      dates.friday ? 5 : -1,\n      dates.saturday ? 6 : -1,\n    ].filter((v) => v !== -1);\n    let totalDuration = Number(duration.hour) * 60 + Number(duration.minute);\n    if (fields.dayOfWeek.length === 0) {\n      setOutput(\"No days selected\");\n    } else {\n      let parser = ScheduleItem.getParser();\n      let exp = parser.fieldsToExpression(fields);\n      let nextDate = exp.next().toDate();\n      let nextDateDT = DateTime.fromJSDate(nextDate);\n      let endDT = nextDateDT.plus({\n        hours: durationDT.hour,\n        minutes: durationDT.minute,\n      });\n      let si = new ScheduleItem(exp.stringify(), totalDuration);\n      setOutput(\n        // exp.stringify() +\n        //   \"\\n\" +\n        //   totalDuration +\n        //   \"\\n\" +\n        //   nextDateDT.toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY) +\n        //   \"\\n\" +\n        //   endDT.toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY)\n        `Cron: ${exp.stringify()}\nDuration: ${totalDuration}\nStart: ${nextDateDT.toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY)}\nEnd: ${endDT.toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY)}\nTEST: ${createScheduleString(si)}`,\n      );\n    }\n  }, [dates, startTime, duration]);\n\n  function dateCheckboxCb(e: any) {\n    // get the name of the checkbox\n    let name = e.target.name;\n    // get the value of the checkbox\n    let value = e.target.checked;\n    // set the state\n    setDates({\n      ...dates,\n      [name]: value,\n    });\n  }\n\n  function startDateCb(e: any) {\n    // get the name of the input\n    let name = e.target.name;\n    // get the value of the input\n    let value = e.target.value;\n    let state = {\n      ...startTime,\n      [name]: value,\n    };\n\n    // create a new time string in the format HH:MM AM/PM\n    let newTimeString = \"\";\n    let dt = DateTime.fromObject({ hour: state.hour, minute: state.minute });\n    newTimeString = dt.toFormat(\"hh:mm a\");\n\n    // set the state\n    setStartTime({\n      ...state,\n      string: newTimeString,\n    });\n\n    let durationDT = DateTime.fromObject({\n      hour: duration.hour,\n      minute: duration.minute,\n    });\n    let endDT = dt.plus({ hours: durationDT.hour, minutes: durationDT.minute });\n    setDuration({\n      ...duration,\n      string:\n        durationDT.toFormat(\"H:mm\") + \" (\" + endDT.toFormat(\"hh:mm a\") + \")\",\n    });\n  }\n\n  function durationCb(e: any) {\n    // get the name of the input\n    let name = e.target.name;\n    // get the value of the input\n    let value = e.target.value;\n    let state = {\n      ...duration,\n      [name]: value,\n    };\n\n    // create a new time string in the format HH:MM AM/PM\n    let newTimeString = \"\";\n    let dt = DateTime.fromObject({ hour: state.hour, minute: state.minute });\n    let startDT = DateTime.fromObject({\n      hour: startTime.hour,\n      minute: startTime.minute,\n    });\n    let endDT = startDT.plus({ hours: state.hour, minutes: state.minute });\n\n    newTimeString =\n      dt.toFormat(\"H:mm\") + \" (\" + endDT.toFormat(\"hh:mm a\") + \")\";\n\n    // set the state\n    setDuration({\n      ...state,\n      string: newTimeString,\n    });\n  }\n\n  return (\n    <div className=\"text-white\">\n      <Header />\n      {/* 0 - sunday 1 - monday... */}\n      {/* seconds = 0 */}\n      {/* minutes = 0..55 by 5 */}\n      {/* hours = 0..23 */}\n      {/* duration same thing as mins/hours */}\n      <div className=\"flex flex-col items-center justify-center p-4\">\n        <h1 className=\"text-4xl font-bold\">Schedule Generator</h1>\n        <div className=\"form-control\">\n          <h2 className=\"text-2xl font-bold\">Weekday</h2>\n          <div>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Sunday</span>\n              <input\n                type=\"checkbox\"\n                name=\"sunday\"\n                checked={dates.sunday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Monday</span>\n              <input\n                type=\"checkbox\"\n                name=\"monday\"\n                checked={dates.monday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Tuesday</span>\n              <input\n                type=\"checkbox\"\n                name=\"tuesday\"\n                checked={dates.tuesday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Wednesday</span>\n              <input\n                type=\"checkbox\"\n                name=\"wednesday\"\n                checked={dates.wednesday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Thursday</span>\n              <input\n                type=\"checkbox\"\n                name=\"thursday\"\n                checked={dates.thursday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Friday</span>\n              <input\n                type=\"checkbox\"\n                name=\"friday\"\n                checked={dates.friday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n            <label className=\"label cursor-pointer\">\n              <span className=\"label-text text-white\">Saturday</span>\n              <input\n                type=\"checkbox\"\n                name=\"saturday\"\n                checked={dates.saturday}\n                onChange={dateCheckboxCb}\n                className=\"checkbox checkbox-primary\"\n              />\n            </label>\n          </div>\n          <h2 className=\"text-2xl font-bold\">Start Time</h2>\n          <div>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"23\"\n              name=\"hour\"\n              value={startTime.hour}\n              onChange={startDateCb}\n              className=\"range border-cyan-600 border\"\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"55\"\n              step=\"5\"\n              name=\"minute\"\n              value={startTime.minute}\n              onChange={startDateCb}\n              className=\"range border-cyan-600 border\"\n            />\n            <div>{startTime.string}</div>\n          </div>\n          <h2 className=\"text-2xl font-bold\">Duration</h2>\n          <div>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"23\"\n              name=\"hour\"\n              value={duration.hour}\n              onChange={durationCb}\n              className=\"range border-cyan-600 border\"\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"55\"\n              step=\"5\"\n              name=\"minute\"\n              value={duration.minute}\n              onChange={durationCb}\n              className=\"range border-cyan-600 border\"\n            />\n            <div>{duration.string}</div>\n          </div>\n          <h2 className=\"text-2xl font-bold\">Output</h2>\n          <div>\n            <textarea\n              className=\"textarea w-96 h-64 textarea-bordered textarea-primary bg-slate-800\"\n              value={output}\n              readOnly\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduleGeneratorPage;\n"],"names":["dates","setDates","React","sunday","monday","tuesday","wednesday","thursday","friday","saturday","startTime","setStartTime","hour","minute","string","duration","setDuration","output","setOutput","dateCheckboxCb","e","name","target","value","checked","startDateCb","state","newTimeString","dt","DateTime","toFormat","durationDT","endDT","plus","hours","minutes","durationCb","fields","ScheduleItem","Number","dayOfWeek","filter","v","totalDuration","length","exp","fieldsToExpression","nextDate","next","toDate","nextDateDT","si","stringify","toLocaleString","createScheduleString","className","type","onChange","min","max","step","readOnly"],"sourceRoot":""}