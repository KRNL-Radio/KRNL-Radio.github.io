{"version":3,"file":"static/js/960.986e68f9.chunk.js","mappings":"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","sources":["api/api.tsx","data/shows.ts"],"sourcesContent":["import { events } from \"../data/events\";\nimport {\n  AUTOMATED_HOST,\n  hosts,\n  KRNL_HOST,\n  NOT_FOUND_HOST,\n} from \"../data/hosts\";\nimport { shows } from \"../data/shows\";\nimport { getTheme, themes } from \"../themes/core\";\nimport { measureFPS } from \"../util/performance\";\n\nfunction RefreshAPI() {\n  // TODO: right now, it's read only\n  // what if it wasn't >:D\n  window.api = window.api || {};\n  window.api.fps = measureFPS;\n  window.api.refresh = RefreshAPI;\n  window.api.data = window.api.data || {};\n  window.api.data.events = events;\n  window.api.data.hosts = hosts;\n  window.api.data.special_hosts = {\n    KRNL: KRNL_HOST,\n    NOT_FOUND: NOT_FOUND_HOST,\n    AUTOMATED: AUTOMATED_HOST,\n  };\n  window.api.data.shows = shows;\n  window.api.data.themes = themes;\n  window.api.player = window.api.player || {};\n  window.player._refresh_metadata().then(() => {\n    window.api.player.formats = {\n      desktop: window.player.desktop_format!,\n      mobile: window.player.mobile_format!,\n    };\n    window.api.player.data = window.player.player_data!;\n  });\n  window.api.requests = window.api.requests || {};\n  window.api.requests.options = {\n    max_per_day: window.player.requests_core.max_requests_per_day,\n    max_per_period: window.player.requests_core.max_requests_per_period,\n    period_length: window.player.requests_core.period_length,\n  };\n  window.api.requests.get_tracks = window.player.requests_core.get_tracks();\n  window.api.requests.request_song = window.player.requests_core.request;\n  window.api.requests.stats = {\n    total: window.player.requests_core.total_requests,\n    today: window.player.requests_core.requests_today,\n    period: window.player.requests_core.requests_this_period,\n    last_request: window.player.requests_core.last_request,\n    next_request: window.player.requests_core.probable_next_request,\n  };\n  window.api.requests.status = window.player.requests_core.status;\n\n  window.api.options = window.api.options || {};\n  window.api.options.player = window.player.player_options;\n  window.api.options.setPlayerOptions = (options: any) => {\n    // merge the options\n    let new_options = {\n      ...window.player.player_options,\n      ...options,\n    };\n    // save the options\n    localStorage.setItem(\"player_options\", JSON.stringify(new_options));\n    window.player.player_options = new_options;\n    window.api.options.player = new_options;\n  };\n  window.api.options.theme = getTheme(localStorage.getItem(\"theme\") || \"\");\n  window.api.options.setTheme = (theme: string) => {\n    localStorage.setItem(\"theme\", theme);\n    window.dispatchEvent(new StorageEvent(\"storage\", { key: \"theme\" }));\n    window.api.options.theme = getTheme(theme);\n  };\n}\n\nfunction APIPage() {\n  // right let's setup the api!\n  RefreshAPI();\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-white text-black\">\n      This page is intentionally left blank.\n    </div>\n  );\n}\n\nexport default APIPage;\n","import { slugify } from \"../util/slug\";\nimport { getHostByName, Host, KRNL_HOST } from \"./hosts\";\nimport { ScheduleItem } from \"./schedule\";\nexport type ShowLogo = {\n  transparent: string;\n  opaque: string;\n};\n\nexport type Show = {\n  name: string;\n  splash_text: string;\n  description: string;\n  hosts: Host[];\n  logo?: ShowLogo;\n  background?: string;\n  guests?: string; // any guests on the show. they don't get their own page, but they get a mention on the show page.\n  scheduleString: string;\n  schedule: ScheduleItem;\n  hidden?: boolean;\n  hiddenAfter?: Date;\n};\n\nexport const shows: Show[] = [\n  {\n    name: \"The Graveyard Shift\",\n    splash_text: \"\",\n    description:\n      \"Alt is such a broad genre. What does any of it even mean? All I know is you love listening to me every week.\",\n    background: \"#fc73e3\",\n    hosts: [getHostByName(\"Adrien\")],\n    scheduleString: \"Every Tuesday from 10pm to 11pm\",\n    schedule: new ScheduleItem(\"0 22 * * 2\", 60),\n  },\n  {\n    name: \"Stochastic Shuffle\",\n    splash_text: \"\",\n    description:\n      \"This is a totally unplanned show, where anything can happen (within contractual obligations). There's no logic behind this show, it just is.\",\n    background: \"#0f3cec\",\n    hosts: [getHostByName(\"Mark\")],\n    scheduleString: \"Every Monday from 9 pm to 10 pm\",\n    schedule: new ScheduleItem(\"0 21 * * 1\", 60),\n  },\n  {\n    name: \"The Vibe\",\n    splash_text: \"vibes~\",\n    description:\n      \"Somehow even *more* random than Mark's show, but at least 10x more chill! Ice not required.\\n\\n*when he feels like it\",\n    background: \"#1c2dae\",\n    hosts: [getHostByName(\"Grayson\")],\n    scheduleString: \"Every Sunday from 4pm to 5pm*\",\n    schedule: new ScheduleItem(\"0 16 * * 0\", 60),\n  },\n  {\n    name: \"The After School Special\",\n    splash_text: \"Because no one else streams earlier!\",\n    description:\n      \"I play music, different vibes every week, and do some rambling (usually too much rambling)\",\n    background: \"#6f69dd\",\n    hosts: [getHostByName(\"Sophie\")],\n    scheduleString: \"Every Thursday from 3:30pm to 4:30pm\",\n    schedule: new ScheduleItem(\"30 15 * * 4\", 60),\n  },\n  {\n    name: \"Latino Hour\",\n    splash_text: \":D\",\n    description: \"Just vibe and listen to music from across Latin America.\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Zoe\")],\n    scheduleString: \"Every Friday from 4pm to 5pm\",\n    schedule: new ScheduleItem(\"0 16 * * 5\", 60),\n  },\n  {\n    name: \"Timezones\",\n    splash_text: \"International Music and Good Vibes\",\n    description:\n      \"Come and listen to music from all over the world! There's no jet lag here, only Timezones.\",\n    background: \"#232323\",\n    hosts: [getHostByName(\"Trey\"), getHostByName(\"Zoe\")],\n    scheduleString: \"Every Wednesday from 3:30pm to 4:30pm\",\n    schedule: new ScheduleItem(\"30 15 * * 3\", 60),\n  },\n  {\n    name: \"The Bard's Tale\",\n    splash_text: \"The only show that matters\",\n    description: \"\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Caden\")],\n    scheduleString: \"Every Sunday from 1pm to 3pm\",\n    schedule: new ScheduleItem(\"0 13 * * 0\", 120),\n  },\n  {\n    name: \"CCPR\",\n    splash_text: \"\",\n    description: \"Because we can do anything in 18 ~~days~~ minutes!\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Adrien\"), getHostByName(\"Sophie\")],\n    scheduleString: \"Every Monday from 8am to 8:18am\",\n    schedule: new ScheduleItem(\"0 8 * * 1\", 18),\n  },\n  // {\n  //   name: \"CCPR (Previously Recorded)\",\n  //   splash_text: \"\",\n  //   description: \"Missed the live show? No worries, we got you covered!\",\n  //   background: \"#ddfe60\",\n  //   hosts: [getHostByName(\"Adrien\"), getHostByName(\"Sophie\")],\n  // }\n  {\n    name: \"The Box\",\n    splash_text: \"\",\n    description: \"Vibe with music and the occasional conversation\",\n    background: \"#ddfe60\",\n    hosts: [getHostByName(\"Brock\")],\n    guests: \"Garnett Strack\",\n    scheduleString: \"Every Friday from 8pm to 9pm\",\n    schedule: new ScheduleItem(\"0 20 * * 5\", 60),\n  },\n];\n\nexport function getShowByName(name: string): Show | undefined {\n  return shows.find((show) => show.name === name);\n}\n\nexport function getShowsByHost(host: Host): Show[] {\n  return shows.filter(\n    (show) => show.hosts.includes(host) || show.hosts.includes(KRNL_HOST)\n  );\n}\n\nexport function getAllShows(): Show[] {\n  return shows.filter((show) => {\n    if (show.hidden === true) {\n      return false;\n    }\n    if (show.hiddenAfter !== undefined) {\n      if (show.hiddenAfter.getTime() < Date.now()) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nexport function findShowByName(name: string, slug?: boolean): Show | undefined {\n  if (slug === true) {\n    return shows.find((show) => slugify(show.name) === slugify(name));\n  }\n  return shows.find((show) => show.name === name);\n}\n\nexport function getNearestShows(): Show[] {\n  // const now = new Date();\n  const nearest = getAllShows()\n    .filter((show) => show.schedule.getNextOccurance() !== undefined)\n    .sort((a, b) => {\n      const aDate = a.schedule.getNextOccurance();\n      const bDate = b.schedule.getNextOccurance();\n      if (aDate === undefined || bDate === undefined) {\n        return 0;\n      }\n      return aDate.getTime() - bDate.getTime();\n    });\n  return nearest;\n}\n\nexport function getCurrentShows(): Show[] {\n  return getAllShows().filter((show) => show.schedule.isCurrent());\n}\n\nexport function sortShowsByNextOccurance(shows: Show[]): Show[] {\n  return shows.sort((a, b) => {\n    const aDate = a.schedule.getNextOccurance();\n    const bDate = b.schedule.getNextOccurance();\n    if (aDate === undefined || bDate === undefined) {\n      // whatever one has a date is first\n      if (aDate !== undefined) {\n        return -1;\n      }\n      if (bDate !== undefined) {\n        return 1;\n      }\n      // else, they're both undefined, so by name it goes!\n      return a.name.localeCompare(b.name);\n    }\n    return aDate.getTime() - bDate.getTime();\n  });\n}\n\nexport function sortShowsByName(shows: Show[]): Show[] {\n  return shows.sort((a, b) => {\n    // if the show starts with \"The\", ignore it\n    const aName = a.name.startsWith(\"The \") ? a.name.slice(4) : a.name;\n    const bName = b.name.startsWith(\"The \") ? b.name.slice(4) : b.name;\n    return aName.localeCompare(bName);\n  });\n}\n"],"names":["RefreshAPI","window","api","fps","measureFPS","refresh","data","events","hosts","special_hosts","KRNL","KRNL_HOST","NOT_FOUND","NOT_FOUND_HOST","AUTOMATED","AUTOMATED_HOST","shows","themes","player","_refresh_metadata","then","formats","desktop","desktop_format","mobile","mobile_format","player_data","requests","options","max_per_day","requests_core","max_requests_per_day","max_per_period","max_requests_per_period","period_length","get_tracks","request_song","request","stats","total","total_requests","today","requests_today","period","requests_this_period","last_request","next_request","probable_next_request","status","player_options","setPlayerOptions","new_options","localStorage","setItem","JSON","stringify","theme","getTheme","getItem","setTheme","dispatchEvent","StorageEvent","key","className","name","splash_text","description","background","getHostByName","scheduleString","schedule","ScheduleItem","guests","getShowsByHost","host","filter","show","includes","getAllShows","hidden","undefined","hiddenAfter","getTime","Date","now","findShowByName","slug","find","slugify","getNearestShows","getNextOccurance","sort","a","b","aDate","bDate","getCurrentShows","isCurrent","sortShowsByName","aName","startsWith","slice","bName","localeCompare"],"sourceRoot":""}